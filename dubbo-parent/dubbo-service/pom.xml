<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>dubbo-springboot-demo</groupId>
        <artifactId>dubbo-parent</artifactId>
        <version>0.0.1-SNAPSHOT</version>
        <relativePath>../pom.xml</relativePath>
    </parent>

    <groupId>dubbo-springboot-demo</groupId>
    <artifactId>dubbo-service</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>dubbo-service</name>

    <properties>
        <java.version>1.8</java.version>
        <dubbo-boot.version>0.2.0</dubbo-boot.version>
    </properties>

    <dependencies>
        <!-- Boot 依赖 -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- dubbo-springboot starter -->
        <dependency>
            <groupId>com.alibaba.boot</groupId>
            <artifactId>dubbo-spring-boot-starter</artifactId>
            <version>${dubbo-boot.version}</version>
        </dependency>

        <!-- lombok -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
        </dependency>

        <!-- 多模块相互依赖管理 -->
        <dependency>
            <groupId>dubbo-springboot-demo</groupId>
            <artifactId>dubbo-dao</artifactId>
        </dependency>
        <dependency>
            <groupId>dubbo-springboot-demo</groupId>
            <artifactId>dubbo-manager</artifactId>
        </dependency>
        <dependency>
            <groupId>dubbo-springboot-demo</groupId>
            <artifactId>dubbo-common</artifactId>
        </dependency>


        <!-- mybatis  -->
        <dependency>
            <groupId>org.mybatis.spring.boot</groupId>
            <artifactId>mybatis-spring-boot-starter</artifactId>
            <version>2.0.0</version>
        </dependency>




        <!-- druid 连接池 使用springboot 默认的连接池 HikariCP -->
        <!-- https://mvnrepository.com/artifact/com.zaxxer/HikariCP -->
        <!--<dependency>-->
            <!--<groupId>com.zaxxer</groupId>-->
            <!--<artifactId>HikariCP</artifactId>-->
            <!--<version>3.3.0</version>-->
        <!--</dependency>-->

        <!--<dependency>-->
            <!--<groupId>com.alibaba</groupId>-->
            <!--<artifactId>druid-spring-boot-starter</artifactId>-->
            <!--<version>1.1.14</version>-->
        <!--</dependency>-->
        <!--<dependency>-->
            <!--<groupId>com.alibaba</groupId>-->
            <!--<artifactId>druid</artifactId>-->
            <!--<version>1.1.14</version>-->
        <!--</dependency>-->

        <!-- 常用工具类引入 -->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>3.7</version>
        </dependency>

        <!-- 多模块项目配置读取,让程序启动的主模块之外的模块的配置也可见; 仅需主模块配置即可-->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-configuration2</artifactId>
            <version>2.3</version>
        </dependency>

        <!-- 服务接口定义 -->
        <dependency>
            <groupId>code.dubbo.forward</groupId>
            <artifactId>demo.interfaces</artifactId>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <version>2.1.3.RELEASE</version>
                <configuration>
                    <!-- 工程主入口-->
                    <mainClass>com.demo.DubboServiceApplication</mainClass>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

</project>
